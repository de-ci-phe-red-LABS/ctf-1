from init import *

key = b'\xed3\\~W\xde`m\xa2pi\xa0~\x83!\xe9'
iv = b'E\xc6\xc4\x16\x92\xdcA\xba\x07\xfd\x9d\xdf\xc2\x13\xb1\x8c'

msg = b'0000000000000000flag{BSTLKY13}'
#msg  = b'dddddddddddderddnibbreat'
msg_padded = create_pt(msg)
ct = encrypt(msg_padded, key, iv, backend)
print("PLAINTEXT: ", msg_padded)
print("MESSAGE_ENC", ct)

c1, c2 = blockify(ct)

stack = []
response = []

for i in range(16):
    #print("-"*10)
    p = b''.join(map(lambda x: bytes([x^(i+1)]), stack))
    for j in range(256):
        tmp = [os.urandom(15-i), c2]
        tmp[0] += bytes([j])  + p 
        tmp_t = tmp[0] + tmp[1]
        if lwordoracle(tmp_t, key, iv, backend) == 0:
            #print("VAL OF I =", str(j ^ (i+1)), end="")
            stack.insert(0,j^(i+1))
            #print("ACTUAL BYTE: ", str(j^(i+1) ^ c1[-(i+1)]))
            response.insert(0, bytes([j^(i+1) ^ c1[-(i+1)]]))
            break
print("D3C0D3D BL0CK - ", end="")      
print(b''.join(response))
